---
extends:
  - eslint:recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:react/recommended
  - plugin:@typescript-eslint/recommended
parser: "@typescript-eslint/parser"
plugins:
  - react-hooks
  - react-native
  - jest
rules:
  # JavaScript
  object-curly-spacing:
    - warn
    - never
  no-empty: warn
  import/extensions:
    - error
    - always
    - js: never
      jsx: never
      ts: never
      tsx: never
  # TypeScript
  '@typescript-eslint/indent':
    - warn
    - 2
  '@typescript-eslint/no-empty-interface': off
  '@typescript-eslint/no-inferrable-types': off
  # React/React-Native
  react/jsx-filename-extension:
    - error
    - extensions:
        - ".jsx"
        - ".tsx"
  react/jsx-curly-spacing: warn
  react/jsx-equals-spacing: warn
  react/jsx-tag-spacing: warn
  react/jsx-boolean-value: warn
  react/jsx-handler-names: warn
  react/jsx-key: error
  react/jsx-no-bind: warn
  react/jsx-pascal-case: error
  react/jsx-wrap-multilines: warn
  react/no-did-mount-set-state: error
  react/no-find-dom-node: error
  react/no-string-refs: error
  react/prefer-es6-class:
    - warn
    - never
  react/prefer-stateless-function: warn
  react-hooks/rules-of-hooks: error
  react-hooks/exhaustive-deps: warn
  react-native/no-inline-styles: warn
  react-native/no-unused-styles: warn
  react-native/split-platform-components: error
  react-native/no-color-literals: warn
  # Jest
  jest/valid-expect: error
env:
  jest/globals: true
settings:
  react:
    pragma: React
    version: '16.8'
  import/extensions:
    - ".js"
    - ".jsx"
    - ".ts"
    - ".tsx"
  import/resolver:
    node:
      extensions:
        - ".js"
        - ".jsx"
        - ".json"
        - ".ts"
        - ".tsx"
